plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "maven.modrinth:modmenu:${modmenu_version}"

    modImplementation("dev.ultreon.mods:xinexlib-fabric-1.21.1:0.1.0-SNAPSHOT")
    modImplementation("dev.ultreon:mcgdx-fabric-1.21.1:0.1.0-SNAPSHOT")

    implementation(api(library("space.earlygrey:shapedrawer:$shapedrawer_version")))
    implementation(api(library("com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdx_version") {
        exclude group: "org.lwjgl.lwjgl"
        exclude group: "org.lwjgl"
    }))
    implementation(api(library("com.badlogicgames.gdx:gdx:$gdx_version")))
    implementation(api(library("com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-desktop")))
    library('io.projectreactor:reactor-core:3.5.5')
    library('org.reactivestreams:reactive-streams:1.0.4')
    library('org.hjson:hjson:3.1.0')

    include(implementation(api(library('com.github.Nuix:jnode-fs:v1.0.1'))))
    include(implementation "org.graalvm.polyglot:polyglot:24.1.1")
    include(implementation "org.graalvm.python:python-community:24.1.1")
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}
