plugins {
    id 'multiloader-common'
    id 'net.neoforged.moddev'
}

neoForge {
    neoFormVersion = neo_form_version
    // Automatically enable AccessTransformers if the file exists
    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
}

dependencies {
    compileOnlyApi group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    // fabric and neoforge both bundle mixinextras, so it is safe to use it in common
    compileOnlyApi group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.4.1'
    annotationProcessor group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.4.1'

    compileOnly project(":bootimage")

    implementation("dev.ultreon.mods:xinexlib-common-1.21.1:0.1.0-SNAPSHOT")
    implementation("dev.ultreon:mcgdx-common-1.21.1:0.1.0-SNAPSHOT")
    implementation("org.graalvm.polyglot:polyglot:24.1.1")
    implementation("org.graalvm.python:python-community:24.1.1")

    // Extra dependencies
    library("io.projectreactor:reactor-core:3.5.5")
    library("org.hjson:hjson:3.1.0")
    library("space.earlygrey:shapedrawer:$shapedrawer_version")
    implementation api(library("com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdx_version") {
        exclude group: "org.lwjgl.lwjgl"
        exclude group: "org.lwjgl"
    })

    implementation api(library('com.github.Nuix:jnode-fs:v1.0.1'))
    implementation api(library("com.badlogicgames.gdx:gdx:$gdx_version"))
    implementation api(library("com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-desktop"))
}

classes {
    doLast {
        copy {
            from(project(":bootimage").sourceSets.main.output)
            into(outputs)
        }
    }
}

configurations {
    commonJava {
        canBeResolved = false
        canBeConsumed = true
    }
    commonResources {
        canBeResolved = false
        canBeConsumed = true
    }
}

artifacts {
    commonJava sourceSets.main.java.sourceDirectories.singleFile
    commonResources sourceSets.main.resources.sourceDirectories.singleFile
}
repositories {
    mavenCentral()
}
